<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Sign Up - Headphone Store</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <link rel="stylesheet" href="../../css/user/signupPage.css">
  </head>
  <body class="paper-texture">
    <div class="container d-flex align-items-center justify-content-center min-vh-100 py-3 py-md-4">
      <div class="signup-container bg-white">
        <div class="row gx-0">
          <div class="col-md-6 image-side d-none d-md-flex">
            <div class="overlay text-white p-4 p-lg-5">
              <h2 class="fw-bold">Discover Your Sound</h2>
              <p>
                Join us and find the perfect headphones tailored to your
                lifestyle.
              </p>
            </div>
          </div>
          <div class="col-md-6 form-side p-4 p-lg-5">
            <div class="text-center mb-4">
              <img
                src="/images/logo_headphones.png"
                alt="Headphone Store Logo"
                style="height: 80px"
                class="mb-2"
              />
              <h3 class="logo-text h4">Create Account</h3>
              <p class="text-muted small">
                Get started with your free account.
              </p>
            </div>

            <form id="signupForm" novalidate>
              <div class="mb-3">
                <label for="fullName" class="form-label compact-mb-label">Full Name</label>
                <input
                  type="text"
                  class="form-control form-control-sm"
                  id="fullName"
                  name="fullName"
                  placeholder="Enter your full name"
                  required
                />
                <div class="error-message" id="fullNameError"></div>
              </div>
              <div class="mb-3">
                <label for="email" class="form-label compact-mb-label">Email address</label>
                <input
                  type="email"
                  class="form-control form-control-sm"
                  id="email"
                  name="email"
                  placeholder="Enter your email address"
                  required
                />
                <div class="error-message" id="emailError"></div>
              </div>
              <div class="mb-3">
                <label for="phoneNumber" class="form-label compact-mb-label">Phone Number (Optional)</label>
                <input
                  type="tel"
                  class="form-control form-control-sm"
                  id="phoneNumber"
                  name="phoneNumber"
                  placeholder="Enter your phone number"
                />
                <div class="error-message" id="phoneNumberError"></div>
              </div>
              <div class="mb-3">
                <label for="password" class="form-label compact-mb-label">Password</label>
                <input
                  type="password"
                  class="form-control form-control-sm"
                  id="password"
                  name="password"
                  placeholder="Create a strong password"
                  required
                />
                <div class="error-message" id="passwordError"></div>
              </div>
              <div class="mb-3">
                <label for="confirmPassword" class="form-label compact-mb-label">Confirm Password</label>
                <input
                  type="password"
                  class="form-control form-control-sm"
                  id="confirmPassword"
                  name="confirmPassword"
                  placeholder="Confirm your password"
                  required
                />
                <div class="error-message" id="confirmPasswordError"></div>
              </div>

              <div id="formErrorGlobal" class="error-message"></div>

              <button type="submit" class="btn btn-primary w-100 py-2 mb-3 mt-2">
                Create Account
              </button>

              <div class="divider my-3"><span>OR</span></div>
              <button
                type="button"
                class="btn btn-outline-secondary w-100 py-2 d-flex align-items-center justify-content-center"
                onclick="window.location.href='/auth/google'"
              >
                <img
                  src="https://img.icons8.com/color/16/000000/google-logo.png"
                  alt="Google"
                  class="me-2"
                />
                Sign up with Google
              </button>
              <p class="mt-3 text-center text-muted small">
                Already have an account?
                <a href="/login" class="text-dark fw-medium">Log In</a>
              </p>
            </form>
          </div>
        </div>
      </div>
    </div>

    <script>
      const signupForm = document.getElementById("signupForm");
      const formErrorGlobalDiv = document.getElementById("formErrorGlobal");

      function clearAllErrors() {
        document
          .querySelectorAll(".error-message")
          .forEach((el) => (el.textContent = ""));
        document
          .querySelectorAll(".form-control")
          .forEach((el) => el.classList.remove("is-invalid"));
        formErrorGlobalDiv.textContent = "";
      }

      function displayFieldError(fieldId, message) {
        const errorEl = document.getElementById(fieldId + "Error");
        const inputEl = document.getElementById(fieldId);
        if (errorEl) errorEl.textContent = message;
        if (inputEl) inputEl.classList.add("is-invalid");
      }

      signupForm.addEventListener("submit", async function (event) {
        event.preventDefault();
        clearAllErrors();
        const submitButton = signupForm.querySelector('button[type="submit"]');
        submitButton.disabled = true;
        submitButton.classList.add('btn-loading');

        const formData = new FormData(signupForm);
        const data = Object.fromEntries(formData.entries());

        try {
          const response = await fetch("/signup", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(data),
          });

          const result = await response.json();

          if (response.ok && result.success) {
            // Store email for OTP page (or handle via session server-side)
            if (typeof(Storage) !== "undefined") {
              localStorage.setItem("signupEmail", data.email);
            }
            if (result.redirectTo) {
              window.location.href = result.redirectTo;
            } else {
              window.location.href = "/verify-otp"; // Fallback
            }
          } else {
            if (result.errors) {
              for (const field in result.errors) {
                displayFieldError(field, result.errors[field]);
              }
            } else if (result.message) {
              formErrorGlobalDiv.textContent = result.message;
            } else {
              formErrorGlobalDiv.textContent =
                "An unexpected error occurred during signup.";
            }
          }
        } catch (error) {
          console.error("Signup fetch error:", error);
          formErrorGlobalDiv.textContent =
            "Could not connect to the server. Please try again.";
        } finally {
          submitButton.disabled = false;
          submitButton.classList.remove('btn-loading');
        }
      });

      // Add input focus/blur effects
      document.querySelectorAll('.form-control').forEach(input => {
        input.addEventListener('focus', function() {
          this.parentElement.classList.add('focused');
        });
        
        input.addEventListener('blur', function() {
          this.parentElement.classList.remove('focused');
        });
      });
    </script>
  </body>
</html>